// <auto-generated />
using System;
using Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Models.Bird", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("LikesToPlay")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Birds");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7e49c247-d69c-4c47-88d2-744eaa0dcd33"),
                            Color = "Green",
                            LikesToPlay = true,
                            Name = "Kiwi"
                        },
                        new
                        {
                            Id = new Guid("0ae3521d-edec-4164-8f63-0962de8d9189"),
                            Color = "Yellow",
                            LikesToPlay = true,
                            Name = "Sunshine"
                        },
                        new
                        {
                            Id = new Guid("f3791a20-e3b4-4710-bc0c-a654e5308039"),
                            Color = "Blue",
                            LikesToPlay = true,
                            Name = "Sky"
                        },
                        new
                        {
                            Id = new Guid("e3f2085c-18dc-4e96-8125-8cc35a05e735"),
                            Color = "Red",
                            LikesToPlay = true,
                            Name = "Cherry"
                        },
                        new
                        {
                            Id = new Guid("b016be05-0b22-4e42-ab90-c23b66ce3b9f"),
                            Color = "White",
                            LikesToPlay = true,
                            Name = "Snowflake"
                        });
                });

            modelBuilder.Entity("Domain.Models.Cat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("LikesToPlay")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cats");

                    b.HasData(
                        new
                        {
                            Id = new Guid("04e636fe-bf22-442c-9f4e-0abbfc409853"),
                            Breed = "Siamese",
                            LikesToPlay = true,
                            Name = "Whiskers",
                            Weight = 8
                        },
                        new
                        {
                            Id = new Guid("f9c917df-7452-47ec-9cc3-c5888a68ca6a"),
                            Breed = "Persian",
                            LikesToPlay = true,
                            Name = "Mittens",
                            Weight = 10
                        },
                        new
                        {
                            Id = new Guid("39c5ec24-1ddc-4161-8d48-17c57b4cf233"),
                            Breed = "Maine Coon",
                            LikesToPlay = true,
                            Name = "Shadow",
                            Weight = 15
                        },
                        new
                        {
                            Id = new Guid("d50e2524-9447-4993-b572-e2caddb3f3f7"),
                            Breed = "Ragdoll",
                            LikesToPlay = true,
                            Name = "Smokey",
                            Weight = 12
                        },
                        new
                        {
                            Id = new Guid("9b83bcc1-6e86-4704-9bf6-962ca5bc3fec"),
                            Breed = "Bengal",
                            LikesToPlay = true,
                            Name = "Tiger",
                            Weight = 11
                        });
                });

            modelBuilder.Entity("Domain.Models.Dog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("LikesToPlay")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Dogs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a88fed4b-3d00-4d0f-bcf4-0219ac362939"),
                            Breed = "Labrador",
                            LikesToPlay = true,
                            Name = "Luna",
                            Weight = 25
                        },
                        new
                        {
                            Id = new Guid("dd90b38e-b669-4c5e-8124-5db0934616f1"),
                            Breed = "Golden Retriever",
                            LikesToPlay = true,
                            Name = "Max",
                            Weight = 28
                        },
                        new
                        {
                            Id = new Guid("b517fae1-cbf3-441a-a8b2-b87c8581e7e4"),
                            Breed = "German Shepherd",
                            LikesToPlay = true,
                            Name = "Bella",
                            Weight = 30
                        },
                        new
                        {
                            Id = new Guid("554240e5-4e9a-46b2-947e-593fe27b5d82"),
                            Breed = "Poodle",
                            LikesToPlay = true,
                            Name = "Rocky",
                            Weight = 15
                        },
                        new
                        {
                            Id = new Guid("8f7879cd-d5fb-4d1f-9341-6a99716d5e62"),
                            Breed = "Beagle",
                            LikesToPlay = true,
                            Name = "Daisy",
                            Weight = 18
                        },
                        new
                        {
                            Id = new Guid("b4a900c1-d1a7-43e9-a23d-c129ab9e6623"),
                            Breed = "Golden Retriever",
                            LikesToPlay = true,
                            Name = "Riley",
                            Weight = 30
                        });
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.Models.UserBird", b =>
                {
                    b.Property<Guid>("BirdId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("BirdId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserBird");
                });

            modelBuilder.Entity("Domain.Models.UserCat", b =>
                {
                    b.Property<Guid>("CatId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("CatId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCat");
                });

            modelBuilder.Entity("Domain.Models.UserDog", b =>
                {
                    b.Property<Guid>("DogId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("DogId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserDog");
                });

            modelBuilder.Entity("Domain.Models.UserBird", b =>
                {
                    b.HasOne("Domain.Models.Bird", "Bird")
                        .WithMany("UserBird")
                        .HasForeignKey("BirdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("UserBird")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bird");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.UserCat", b =>
                {
                    b.HasOne("Domain.Models.Cat", "Cat")
                        .WithMany("UserCat")
                        .HasForeignKey("CatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("UserCat")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.UserDog", b =>
                {
                    b.HasOne("Domain.Models.Dog", "Dog")
                        .WithMany("UserDog")
                        .HasForeignKey("DogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("UserDog")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dog");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.Bird", b =>
                {
                    b.Navigation("UserBird");
                });

            modelBuilder.Entity("Domain.Models.Cat", b =>
                {
                    b.Navigation("UserCat");
                });

            modelBuilder.Entity("Domain.Models.Dog", b =>
                {
                    b.Navigation("UserDog");
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Navigation("UserBird");

                    b.Navigation("UserCat");

                    b.Navigation("UserDog");
                });
#pragma warning restore 612, 618
        }
    }
}
