// <auto-generated />
using System;
using Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Models.Bird", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("LikesToPlay")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TypeOfAnimal")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("animalCanDo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Birds");

                    b.HasData(
                        new
                        {
                            Id = new Guid("007dd11d-8618-479f-96f9-d4dedd91282d"),
                            Color = "Green",
                            LikesToPlay = true,
                            Name = "Kiwi",
                            TypeOfAnimal = "Bird",
                            animalCanDo = "This animal can fly"
                        },
                        new
                        {
                            Id = new Guid("20421861-45c8-4c73-a9d3-86d298591e3d"),
                            Color = "Yellow",
                            LikesToPlay = true,
                            Name = "Sunshine",
                            TypeOfAnimal = "Bird",
                            animalCanDo = "This animal can fly"
                        },
                        new
                        {
                            Id = new Guid("29183377-ff6e-4ba1-a0b9-7f90faf85961"),
                            Color = "Blue",
                            LikesToPlay = true,
                            Name = "Sky",
                            TypeOfAnimal = "Bird",
                            animalCanDo = "This animal can fly"
                        },
                        new
                        {
                            Id = new Guid("a982bf15-f1c9-47fc-97cb-cef2e5940c7e"),
                            Color = "Red",
                            LikesToPlay = true,
                            Name = "Cherry",
                            TypeOfAnimal = "Bird",
                            animalCanDo = "This animal can fly"
                        },
                        new
                        {
                            Id = new Guid("73399501-7256-4bd3-b2c1-5fd13da28602"),
                            Color = "White",
                            LikesToPlay = true,
                            Name = "Snowflake",
                            TypeOfAnimal = "Bird",
                            animalCanDo = "This animal can fly"
                        });
                });

            modelBuilder.Entity("Domain.Models.Cat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("LikesToPlay")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TypeOfAnimal")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.Property<string>("animalCanDo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Cats");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7281eb31-94ae-4e94-8d77-80a07c928001"),
                            Breed = "Siamese",
                            LikesToPlay = true,
                            Name = "Whiskers",
                            TypeOfAnimal = "Cat",
                            Weight = 8,
                            animalCanDo = "This animal can meow"
                        },
                        new
                        {
                            Id = new Guid("7d564f19-0f18-41ee-98aa-4d5c395cbea7"),
                            Breed = "Persian",
                            LikesToPlay = true,
                            Name = "Mittens",
                            TypeOfAnimal = "Cat",
                            Weight = 10,
                            animalCanDo = "This animal can meow"
                        },
                        new
                        {
                            Id = new Guid("03862852-72f2-42e0-90d4-3197a507fe30"),
                            Breed = "Maine Coon",
                            LikesToPlay = true,
                            Name = "Shadow",
                            TypeOfAnimal = "Cat",
                            Weight = 15,
                            animalCanDo = "This animal can meow"
                        },
                        new
                        {
                            Id = new Guid("d86fdb16-7885-495b-8d20-997ffe5da528"),
                            Breed = "Ragdoll",
                            LikesToPlay = true,
                            Name = "Smokey",
                            TypeOfAnimal = "Cat",
                            Weight = 12,
                            animalCanDo = "This animal can meow"
                        },
                        new
                        {
                            Id = new Guid("d0adcbc7-b9b5-4145-aec7-b70124454f1e"),
                            Breed = "Bengal",
                            LikesToPlay = true,
                            Name = "Tiger",
                            TypeOfAnimal = "Cat",
                            Weight = 11,
                            animalCanDo = "This animal can meow"
                        });
                });

            modelBuilder.Entity("Domain.Models.Dog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("LikesToPlay")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TypeOfAnimal")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.Property<string>("animalCanDo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Dogs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("165bfa21-b3ce-4810-962a-ab98f70c369f"),
                            Breed = "Labrador",
                            LikesToPlay = true,
                            Name = "Luna",
                            TypeOfAnimal = "Dog",
                            Weight = 25,
                            animalCanDo = "This animal can bark"
                        },
                        new
                        {
                            Id = new Guid("f76e4ed8-dad7-4f72-bf78-d85e89f437c7"),
                            Breed = "Golden Retriever",
                            LikesToPlay = true,
                            Name = "Max",
                            TypeOfAnimal = "Dog",
                            Weight = 28,
                            animalCanDo = "This animal can bark"
                        },
                        new
                        {
                            Id = new Guid("a0e4df16-14db-4679-8278-d045d2554525"),
                            Breed = "German Shepherd",
                            LikesToPlay = true,
                            Name = "Bella",
                            TypeOfAnimal = "Dog",
                            Weight = 30,
                            animalCanDo = "This animal can bark"
                        },
                        new
                        {
                            Id = new Guid("ed2fb8ad-d5c5-42af-8acd-aadd8dcad39b"),
                            Breed = "Poodle",
                            LikesToPlay = true,
                            Name = "Rocky",
                            TypeOfAnimal = "Dog",
                            Weight = 15,
                            animalCanDo = "This animal can bark"
                        },
                        new
                        {
                            Id = new Guid("b04dc8bf-7285-461c-9ba7-7eed3c8b0ba6"),
                            Breed = "Beagle",
                            LikesToPlay = true,
                            Name = "Daisy",
                            TypeOfAnimal = "Dog",
                            Weight = 18,
                            animalCanDo = "This animal can bark"
                        },
                        new
                        {
                            Id = new Guid("ba2918a9-89d8-4941-85ee-20680fca43f0"),
                            Breed = "Golden Retriever",
                            LikesToPlay = true,
                            Name = "Riley",
                            TypeOfAnimal = "Dog",
                            Weight = 30,
                            animalCanDo = "This animal can bark"
                        });
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.Models.UserBird", b =>
                {
                    b.Property<Guid>("BirdId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("BirdId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserBird");
                });

            modelBuilder.Entity("Domain.Models.UserCat", b =>
                {
                    b.Property<Guid>("CatId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("CatId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCat");
                });

            modelBuilder.Entity("Domain.Models.UserDog", b =>
                {
                    b.Property<Guid>("DogId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("DogId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserDog");
                });

            modelBuilder.Entity("Domain.Models.UserBird", b =>
                {
                    b.HasOne("Domain.Models.Bird", "Bird")
                        .WithMany("UserBird")
                        .HasForeignKey("BirdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("UserBird")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bird");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.UserCat", b =>
                {
                    b.HasOne("Domain.Models.Cat", "Cat")
                        .WithMany("UserCat")
                        .HasForeignKey("CatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("UserCat")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.UserDog", b =>
                {
                    b.HasOne("Domain.Models.Dog", "Dog")
                        .WithMany("UserDog")
                        .HasForeignKey("DogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("UserDog")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dog");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.Bird", b =>
                {
                    b.Navigation("UserBird");
                });

            modelBuilder.Entity("Domain.Models.Cat", b =>
                {
                    b.Navigation("UserCat");
                });

            modelBuilder.Entity("Domain.Models.Dog", b =>
                {
                    b.Navigation("UserDog");
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Navigation("UserBird");

                    b.Navigation("UserCat");

                    b.Navigation("UserDog");
                });
#pragma warning restore 612, 618
        }
    }
}
