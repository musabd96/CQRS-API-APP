// <auto-generated />
using System;
using Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231216131638_DbCreateSeed")]
    partial class DbCreateSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Models.Bird", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("LikesToPlay")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Birds");

                    b.HasData(
                        new
                        {
                            Id = new Guid("eece0ea1-3bb9-4bc4-b798-e4d095d66533"),
                            LikesToPlay = true,
                            Name = "Alex"
                        },
                        new
                        {
                            Id = new Guid("07e1b8c5-7927-45ee-95ed-e2e6d6b7fc9a"),
                            LikesToPlay = true,
                            Name = "Sofia"
                        },
                        new
                        {
                            Id = new Guid("88404411-8a2b-489c-a193-984a8e197704"),
                            LikesToPlay = true,
                            Name = "Max"
                        });
                });

            modelBuilder.Entity("Domain.Models.Cat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("LikesToPlay")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Cats");

                    b.HasData(
                        new
                        {
                            Id = new Guid("08b877ed-a76f-40c2-ad4c-03808bd98013"),
                            Breed = "Siamese",
                            LikesToPlay = true,
                            Name = "Steven"
                        },
                        new
                        {
                            Id = new Guid("86943bf3-c0a8-4a28-959e-0da850b1b04f"),
                            Breed = "Persian",
                            LikesToPlay = true,
                            Name = "Alpin"
                        },
                        new
                        {
                            Id = new Guid("f0daa88c-f5a8-4d6d-9b2e-57491d05399a"),
                            Breed = "Maine Coon",
                            LikesToPlay = true,
                            Name = "Nelson"
                        });
                });

            modelBuilder.Entity("Domain.Models.Dog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("LikesToPlay")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Dogs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b3182bfa-dbfe-4731-b373-85a3f442ef75"),
                            Breed = "Labrador",
                            LikesToPlay = true,
                            Name = "Björn"
                        },
                        new
                        {
                            Id = new Guid("bab03e79-231f-4726-a56c-45d6740aad0c"),
                            Breed = "Golden Retriever",
                            LikesToPlay = true,
                            Name = "Patrik"
                        },
                        new
                        {
                            Id = new Guid("3f84e34b-865e-4d2f-86ed-357dab070670"),
                            Breed = "German Shepherd",
                            LikesToPlay = true,
                            Name = "Alfred"
                        });
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
